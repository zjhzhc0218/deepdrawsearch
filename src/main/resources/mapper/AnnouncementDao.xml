<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deepdraw.deepsearch.dao.AnnouncementDao" >
  <resultMap id="BaseResultMap" type="com.deepdraw.deepsearch.entity.Announcement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="synopsis" property="synopsis" jdbcType="VARCHAR" />
    <result column="specific_content" property="specificContent" jdbcType="VARCHAR" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, author, synopsis, specific_content, creation_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from announcement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from announcement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.deepdraw.deepsearch.entity.Announcement" >
    insert into announcement (id, title, author, 
      synopsis, specific_content, creation_time
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{synopsis,jdbcType=VARCHAR}, #{specificContent,jdbcType=VARCHAR}, now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deepdraw.deepsearch.entity.Announcement" >
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="synopsis != null" >
        synopsis,
      </if>
      <if test="specificContent != null" >
        specific_content,
      </if>
        creation_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null" >
        #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="specificContent != null" >
        #{specificContent,jdbcType=VARCHAR},
      </if>
      now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepdraw.deepsearch.entity.Announcement" >
    update announcement
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null" >
        synopsis = #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="specificContent != null" >
        specific_content = #{specificContent,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepdraw.deepsearch.entity.Announcement" >
    update announcement
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      synopsis = #{synopsis,jdbcType=VARCHAR},
      specific_content = #{specificContent,jdbcType=VARCHAR},
      creation_time = #{creationTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectBytitleS" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from announcement
    where 1=1
    <if test="title != null" >
      AND title like   CONCAT(CONCAT('%', #{title,jdbcType=VARCHAR}), '%')
    </if>
    order by id DESC
  </select>

  <select id="selectCount" resultType = "java.lang.Integer">
    select
    count(*)
    from announcement
  </select>

  <select id="selectANbyLimit"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from announcement
    order by id DESC
    LIMIT #{number1,jdbcType=INTEGER},#{number2,jdbcType=INTEGER}
  </select>

</mapper>